Function Kill-Process {
    [cmdletbinding()]
    param(
      $ComputerName=$env:COMPUTERNAME,
      [parameter(Mandatory=$true)]
      $ProcessName
    )
    $Processes = Get-WmiObject -Class Win32_Process -ComputerName $ComputerName -Filter "name='$ProcessName'"
 
    foreach ($process in $processes) {
      $returnval = $process.terminate()
      $processid = $process.handle
 
    if($returnval.returnvalue -eq 0) {
      write-host "The process $ProcessName `($processid`) terminated successfully"
    }
        else {
          write-host "The process $ProcessName `($processid`) termination has some problems"
        }
    }
}

$days = 14
$Computers = Get-ADComputer -Filter * -Properties lastlogondate | Where-Object lastlogondate -gt (get-date).AddDays(-$days)
Foreach($PC in $Computers){
    $PCname = $PC.Name
    $TestConnection = Test-path "\\$PCname\c$\Users"
    If($TestConnection){
        Write-Host -ForegroundColor Green "Scanning $PCname..."
        $users = Get-ChildItem \\$PCname\c$\users

        Foreach($folder in $users){
            $path = "\\$PCname\c$\\Users\$folder\appdata\local\temp"
            Get-ChildItem -path $path -Recurse -Include "*rknrl*" -ErrorAction SilentlyContinue | Remove-Item -Verbose
            Get-ChildItem -path $path -Recurse -Include "*winstart*" -ErrorAction SilentlyContinue | Remove-Item -Verbose
            Kill-Process -ComputerName $PCname -ProcessName wscript.exe -ErrorAction SilentlyContinue
        }
    }
    Else{ Write-Host -ForegroundColor Red "$PCname Not available"}
}